rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /projects/{projectId} {
      // Allow authenticated users to create new projects
      allow create: if request.auth != null;

      // Allow read, write, update, delete if the user is the owner, a collaborator, or in the pending array
      allow read, write, update, delete: if request.auth != null && (
        request.auth.token.email == resource.data.owner ||
        request.auth.token.email in resource.data.collaborators ||
        request.auth.token.email in resource.data.pending
      );
    }
    match /projects/{projectId}/tasks/{taskId} {
      allow read, write, update, delete: if request.auth != null && (
        request.auth.token.email == get(/databases/$(database)/documents/projects/$(projectId)).data.owner ||
        request.auth.token.email in get(/databases/$(database)/documents/projects/$(projectId)).data.collaborators
      );
    }
    match /projects/{projectId}/edges/{edgeId} {
      allow read, write, update, delete: if request.auth != null && (
        request.auth.token.email == get(/databases/$(database)/documents/projects/$(projectId)).data.owner ||
        request.auth.token.email in get(/databases/$(database)/documents/projects/$(projectId)).data.collaborators
      );
    }
    match /projects/{projectId}/nodes/{nodeId} {
      allow read, write, update, delete: if request.auth != null && (
        request.auth.token.email == get(/databases/$(database)/documents/projects/$(projectId)).data.owner ||
        request.auth.token.email in get(/databases/$(database)/documents/projects/$(projectId)).data.collaborators
      );
    }
  }
}